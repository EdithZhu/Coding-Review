public class Employee implements Comparable<Employee>{
    String name;
    int id;
    String salary;
    Employee(String name,int id,String salary) {//constructor
        this.name = name;
        this.id = id;
        this.salary = salary;
    }
    public void setName(String name) {this.name = name;}//getter setter
    public String getName() {return name;}
    public void setId(int id) {this.id = id;}
    public int getId() {return id;}
    public void setSalary(String salary) {this.salary = salary;}
    public String getSalary() {return salary;}
    @Override
    public String toString(){
        return "Name: " + this.name + "， ID: " + this.id + "， Salary: " + this.salary;
    }
    @Override
    public int compareTo(Employee emp){
        if (this.getId() < emp.getId()) return 1;
        else if (this.getId() > emp.getId()) return -1;
        else {
            if (this.getSalary().compareTo(emp.getSalary()) < 0) return 1;
            else if (this.getSalary().compareTo(emp.getSalary()) > 0) return -1;
            else return 0;
        }
    }
}

import java.util.*;
import java.util.stream.*;
public class Solution{ 
    public static void main(String args[]) { //find all the duplicate in a string
        Employee emp1 = new Employee("abc", 1, "b");
        Employee emp2 = new Employee("def", 1, "a");
        Employee emp3 = new Employee("ghi", 2, "a");
        Employee emp4 = new Employee("klm", 3, "a");
        TreeSet set = new TreeSet();
        set.add(emp1);
        set.add(emp2);
        set.add(emp3);
        set.add(emp4);
        ArrayList<Employee> lst = new ArrayList<>(set);
        Iterator it = lst.iterator();
        while (it.hasNext()){
            System.out.println((Employee) it.next());
        }
    }
}

//Name: klm， ID: 3， Salary: a
//Name: ghi， ID: 2， Salary: a
//Name: abc， ID: 1， Salary: b
//Name: def， ID: 1， Salary: a
